@import 'settings';

@mixin placeholder {
	::-webkit-input-placeholder {@content} //use inside input-container element as
			::-ms-input-placeholder {@content} //@include placeholder {
			 :-ms-input-placeholder {@content} //  color: $faded-base;
					 ::-moz-placeholder {@content} //  font-weight: 300;
						:-moz-placeholder {@content} //  opacity: 1;
								::placeholder {@content} //}
}

@mixin round($size) {
  width: $size;
  height: $size;
  border-radius: 50%;
}

@mixin fixed-height($height) {
  max-height: $height;
  min-height: $height;
  height: $height;
}

@mixin fixed-width($width) {
  max-width: $width;
  min-width: $width;
  width: $width;
}

@mixin font-fix() {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@mixin custom-select() {
  -moz-appearance: none;
  -webkit-appearance: textfield;
  box-shadow: none;
  cursor: pointer;

  &::-ms-expand {
    display: none;
  }
}

@mixin wide-desktop-min {
  @media (min-width: #{$wide-desktop-min}) {
    @content;
  }
}

@mixin desktop-min {
  @media (min-width: #{$desktop-width}) {
    @content;
  }
}

@mixin low-desktop {
  @media (max-width: #{$desktop-width - 1px}) {
    @content;
  }
}

@mixin low-desktop-only {
  @media (min-width: #{$low-desktop-width}) and (max-width: #{$desktop-width - 1px}) {
    @content;
  }
}

@mixin low-desktop-min {
  @media (min-width: #{$low-desktop-width}) {
    @content;
  }
}

@mixin tablet {
  @media (max-width: #{$low-desktop-width - 1px}) {
    @content;
  }
}

@mixin tablet-only {
  @media (min-width: #{$tablet-width}) and (max-width: #{$low-desktop-width - 1px}) {
    @content;
  }
}

@mixin tablet-min {
  @media (min-width: #{$tablet-width}) {
    @content;
  }
}

@mixin mobile {
  @media (max-width: #{$tablet-width - 1}) {
    @content;
  }
}

@mixin size($value) {
  $width: nth($value, 1);
  $height: $width;
  @if length($value) > 1 {
    $height: nth($value, 2);
  }
  height: $height;
  width: $width;
}

@mixin triangle($size, $color, $direction) { // $direction: up, down, left, right, up-right, up-left, down-right, down-left
  $width: nth($size, 1);
  $height: nth($size, length($size));
  $foreground-color: nth($color, 1);
  $background-color: if(length($color) == 2, nth($color, 2), transparent);
  height: 0;
  width: 0;

  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {
    $width: $width / 2;
    $height: if(length($size) > 1, $height, $height / 2);
    @if $direction == up {
      border-bottom: $height solid $foreground-color;
      border-left: $width solid $background-color;
      border-right: $width solid $background-color;
    } @else if $direction == right {
      border-bottom: $width solid $background-color;
      border-left: $height solid $foreground-color;
      border-top: $width solid $background-color;
    } @else if $direction == down {
      border-left: $width solid $background-color;
      border-right: $width solid $background-color;
      border-top: $height solid $foreground-color;
    } @else if $direction == left {
      border-bottom: $width solid $background-color;
      border-right: $height solid $foreground-color;
      border-top: $width solid $background-color;
    }
  } @else if ($direction == up-right) or ($direction == up-left) {
    border-top: $height solid $foreground-color;
    @if $direction == up-right {
      border-left: $width solid $background-color;
    } @else if $direction == up-left {
      border-right: $width solid $background-color;
    }
  } @else if ($direction == down-right) or ($direction == down-left) {
    border-bottom: $height solid $foreground-color;

    @if $direction == down-right {
      border-left: $width solid $background-color;
    } @else if $direction == down-left {
      border-right: $width solid $background-color;
    }
  }
}
